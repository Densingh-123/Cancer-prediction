import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
import sklearn.datasets
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Load the dataset
data = sklearn.datasets.load_breast_cancer()
data_frame = pd.DataFrame(data.data, columns=data.feature_names)
data_frame['label'] = data.target

# Split data into features and labels
x = data_frame.drop(columns='label', axis=1)
y = data_frame['label']

# Split into training and testing sets
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=2)

# Create and train the model
model = LogisticRegression(max_iter=10000)
model.fit(x_train, y_train)

# Predict on train data
X_train_predict = model.predict(x_train)
train_accuracy = accuracy_score(y_train, X_train_predict)

# Predict on test data
X_test_predict = model.predict(x_test)
test_accuracy = accuracy_score(y_test, X_test_predict)

# Print accuracies
print("Accuracy in Training Data : ", train_accuracy)
print("Accuracy in Testing Data : ", test_accuracy)

# Predict on custom input data
input_data = [17.99,10.38,122.8,1001,0.1184,0.2776,0.3001,0.1471,0.2419,0.07871,
              1.095,0.9053,8.589,153.4,0.006399,0.04904,0.05373,0.01587,0.03003,0.006193,
              25.38,17.33,184.6,2019,0.1622,0.6656,0.7119,0.2654,0.4601,0.1189]

numpy_arr = np.asarray(input_data)
input_reshaped = numpy_arr.reshape(1, -1)
prediction = model.predict(input_reshaped)
print("Prediction for the given input data:", prediction)
if(prediction[0]==0):
    print("The Brest Cancer is Malignant")
else:
    print('The Brest Cancer is Benign')
